
import java.awt.Color;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;

import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;

//import Server.ReturnBook_Server;
//import Server.SellBook_Server;
//import Server.UpdateFine_Server;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

public class menu extends javax.swing.JFrame {
//------	static ReturnBook_Server rbs =new ReturnBook_Server();
//-------	static UpdateFine_Server ufs = new UpdateFine_Server();
	static int check=0;
    /**
     * Creates new form menu
     */
    public menu() {
        initComponents();
        this.setLocation(325, 150);
        this.setResizable(false);
       ImageIcon i=new ImageIcon("1st.jpg");
       JLabel l=new JLabel(i);
       l.setBounds(0, 0, i.getIconWidth(), i.getIconHeight());
       this.add(l);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        SB = new javax.swing.JButton();
        IB = new javax.swing.JButton();
        FB = new javax.swing.JButton();
        UF = new javax.swing.JButton();
        RB = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        SB.setText("Search Book");
        SB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SBActionPerformed(evt);
            }
        });

        IB.setText("Issue Book");
        IB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IBActionPerformed(evt);
            }
        });

        FB.setText("Fine Books");
        FB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FBActionPerformed(evt);
            }
        });

        UF.setText("Update Fine");
        UF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UFActionPerformed(evt);
            }
        });

        RB.setText("Return Book");
        RB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(180, 180, 180)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(UF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SB, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(RB, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(IB, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(FB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(242, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(SB)
                .addGap(46, 46, 46)
                .addComponent(IB)
                .addGap(47, 47, 47)
                .addComponent(RB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addComponent(FB)
                .addGap(44, 44, 44)
                .addComponent(UF)
                .addGap(76, 76, 76))
        );

        pack();
    }// </editor-fold>                        

    private void SBActionPerformed(java.awt.event.ActionEvent evt) {                                   
this.setVisible(false);
       SellB b=new SellB();
       b.setVisible(true);
       
   
     //  sb_s.main(null);
        
        
        
    }                                  

    private void IBActionPerformed(java.awt.event.ActionEvent evt) {                                   
        this.setVisible(false);
        Is_bk b=new Is_bk();
        b.setVisible(true);
    }                                  

    private void FBActionPerformed(java.awt.event.ActionEvent evt) {                                   
        
        fin_Bk b=new fin_Bk();
        b.setVisible(true);
    }                                  

    private void RBActionPerformed(java.awt.event.ActionEvent evt) {                                   
       
     JTextField Book_id = new JTextField();
JTextField book_name = new JTextField();
Object[] message = {
    "Book id:", Book_id,
    "Book name:", book_name
};

int option = JOptionPane.showConfirmDialog(null, message, "Return book", JOptionPane.OK_CANCEL_OPTION);
if (option == JOptionPane.OK_OPTION) {
	check=1;
         try {
        	
        	
        		UDP_returnBook udp=new UDP_returnBook(Book_id.getText(),book_name.getText(),"2");
         } catch (SocketException ex) {
             Logger.getLogger(menu.class.getName()).log(Level.SEVERE, null, ex);
         } catch (IOException ex) {
             Logger.getLogger(menu.class.getName()).log(Level.SEVERE, null, ex);
         }
         
if( 1==1/* Condition tmhari*/){
    // JOptionPane.showMessageDialog(this, "Successfull", "Book Issued", JOptionPane.INFORMATION_MESSAGE);
     
}
else{
    //JOptionPane.showMessageDialog(this, "Book not issued", "Error", JOptionPane.ERROR_MESSAGE);
}
}
else {
    System.out.println("Login canceled");
}





    }                                  

    
    
    private void UFActionPerformed(java.awt.event.ActionEvent evt) {                                   
       
        //First Dialogue
        JTextField Borrower_id = new JTextField();
        JTextField book_id = new JTextField();
Object[] message = {
    "Borrower id:", Borrower_id,
    "Book name:", book_id
};


int option = JOptionPane.showConfirmDialog(this, message, "Return book", JOptionPane.OK_CANCEL_OPTION);
if (option == JOptionPane.OK_OPTION){
       this.setVisible(true);
	check=2;
	
	try {
		UDP_updateFine udp=new UDP_updateFine(Borrower_id.getText(),book_id.getText(),"1");
	    
	} catch (SocketException ex) {
	    Logger.getLogger(menu.class.getName()).log(Level.SEVERE, null, ex);
	} catch (IOException ex) {
	    Logger.getLogger(menu.class.getName()).log(Level.SEVERE, null, ex);
	}
      
  if( 1==1/*borrower id ka fine nh he*/){
       // JOptionPane.showMessageDialog(this, "Borrower id has no fine", "Error", JOptionPane.INFORMATION_MESSAGE);
  }
  else{   this.setVisible(true);
      //Third dialogue agar bborrower id ka fine he to usy update krny k liye
       
      JTextField Borrower_id1 = new JTextField();
        JTextField book_id1 = new JTextField();
        JTextField update = new JTextField();
Object[] message1 = {
    "Borrower id:", Borrower_id1,
    "Book name:", book_id1
     ,"New Fine" , update
};

int option1 = JOptionPane.showConfirmDialog(null, message1, "Update fine", JOptionPane.OK_CANCEL_OPTION);
  
      
  }
}
if (option == JOptionPane.OK_CANCEL_OPTION)
	check=0;

    }                                  

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws SocketException, UnknownHostException, IOException {
       
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        try{ 
            sst t=new sst();
            //this.setVisible(false);
        t.setVisible(true);
       Thread.sleep(4000);
        t.setVisible(false);
           // this.setVisible(true);
            } catch(InterruptedException e){
                   
               }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
       
                new menu().setVisible(true);
            
            }
        });
        //rbs.main(null);
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton FB;
    private javax.swing.JButton IB;
    private javax.swing.JButton RB;
    private javax.swing.JButton SB;
    private javax.swing.JButton UF;
    // End of variables declaration                   
}
